# 画出两组间，细胞的比例箱线图。先预处理好cellIDs和cell_prop两个文件，然后直接run就行了

test_seu <- readRDS("")

#### cellIDs ####
cell_ident <- unique(test_seu@active.ident)
cellIDs <- list()
for (i in 1:length(cell_ident)) {
  onelist <- list(rownames(test_seu@meta.data)[which(test_seu$cell_identifies1 == cell_ident[i])]) ###
  names(onelist) <- cell_ident[i]
  cellIDs <- c(cellIDs, onelist)
}
#### cell_prop ####
library(Seurat)
cell_prop<-as.data.frame(prop.table(table(Idents(test_seu),
                                          test_seu$orig.ident)
                                    )
                         )
cell_prop$pheno <- ifelse(cell_prop$Var2 %in% c("P01","P02","P03","P04","P05","P07"), "R", "NR") ###
colnames(cell_prop) <- c("cell.type", "subject", "percent", "pheno")
cell_prop$pheno <- as.factor(cell_prop$pheno)


#### run ####
cell.type.percent.summary.overall <- cell_prop
# four column: cell_cluster, percent of this cluster, sample, pheno NR/R(factor)

Ordered_23clusters_cellIDs <- cellIDs
# cells of each cell population

library(ggpubr)
library(coin)



# Plot significant ones with P values displayed

for (i in 1:length(cell_ident)) {
  
  current.df <- cell.type.percent.summary.overall[cell.type.percent.summary.overall$cell.type == names(Ordered_23clusters_cellIDs)[i],]
  
  print(as.character(unique(current.df$cell.type)))
  
  wt <- wilcox_test(percent ~ pheno, data = current.df, distribution = "exact") 
  
  out.name <- paste0("No",i,"_",names(Ordered_23clusters_cellIDs)[i],".boxplot.tiff")
  
  current.df$percent <- 100*current.df$percent
  
  xlab_text <- paste0(as.character(unique(current.df$cell.type)),": P = ",round(pvalue(wt),4)) 
  
  
  tiff(file = out.name, width = 300, height = 400, units = "px", res = 120) ####
  
  # Add jitter points and errors (mean_se)
  
  print(ggboxplot(current.df, x = "pheno", y = "percent", ylab="(%) of CD45+", label.pos = "out", lab.nb.digits = 1, xlab=xlab_text, lab.size=3,
                  add = c("jitter"), width=0.5, color="pheno", palette = c("#00AFBB", "#E7B800"), legend=NULL, shape = "pheno"))
  
  dev.off()
  
}
